openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /friends/{friendshipId}:
    put:
      tags:
        - friendship-controller
      operationId: setFriendshipApproval
      parameters:
        - name: X-Social-Media-User-Id
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: friendshipId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: approved
          in: query
          required: true
          schema:
            type: boolean
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FriendshipDto'
    delete:
      tags:
        - friendship-controller
      operationId: removeFromFriends
      parameters:
        - name: X-Social-Media-User-Id
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: unfriendedUserId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: friendshipId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
  /registration:
    post:
      tags:
        - auth-controller
      operationId: createNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /posts:
    get:
      tags:
        - post-controller
      operationId: findNewPosts
      parameters:
        - name: X-Social-Media-User-Id
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: from
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostOutDto'
    post:
      tags:
        - post-controller
      operationId: addNewPost
      parameters:
        - name: X-Social-Media-User-Id
          in: header
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPostDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostOutDto'
  /messages/{receiverId}:
    post:
      tags:
        - message-controller
      operationId: addMessage
      parameters:
        - name: X-Social-Media-User-Id
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: receiverId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMessageDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessageOutDto'
  /friends:
    post:
      tags:
        - friendship-controller
      operationId: createFriendshipRequest
      parameters:
        - name: X-Social-Media-User-Id
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: receiverId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FriendshipDto'
  /auth:
    post:
      tags:
        - auth-controller
      operationId: createAuthToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwtRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /posts/{postId}:
    get:
      tags:
        - post-controller
      operationId: findPostById
      parameters:
        - name: X-Social-Media-User-Id
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostOutDto'
    delete:
      tags:
        - post-controller
      operationId: deletePost
      parameters:
        - name: X-Social-Media-User-Id
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
    patch:
      tags:
        - post-controller
      operationId: updatePost
      parameters:
        - name: X-Social-Media-User-Id
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdateDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostOutDto'
  /users:
    get:
      tags:
        - user-controller
      operationId: findAllUsers
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserOutDto'
  /messages/{senderId}:
    get:
      tags:
        - message-controller
      operationId: getAllMessagesFromSender
      parameters:
        - name: X-Social-Media-User-Id
          in: header
          required: true
          schema:
            type: integer
            format: int64
        - name: senderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageOutDto'
  /users/{userId}:
    delete:
      tags:
        - user-controller
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        "200":
          description: OK
components:
  schemas:
    AppError:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        description:
          type: string
        timestamp:
          type: string
          format: date-time
    FriendshipDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: integer
          format: int64
        receiverId:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - WAITING
            - APPROVED
            - REJECTED
            - CANCELLED
    UserRegistrationDto:
      required:
        - confirmPassword
        - email
        - password
        - username
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 3
          type: string
        username:
          maxLength: 255
          minLength: 3
          type: string
        password:
          maxLength: 50
          minLength: 3
          type: string
        confirmPassword:
          maxLength: 50
          minLength: 3
          type: string
    NewPostDto:
      required:
        - heading
        - text
      type: object
      properties:
        heading:
          maxLength: 150
          minLength: 3
          type: string
        text:
          maxLength: 7000
          minLength: 3
          type: string
        image:
          type: array
          items:
            type: string
            format: byte
    PostOutDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        heading:
          type: string
        text:
          type: string
        authorId:
          type: integer
          format: int64
    NewMessageDto:
      required:
        - text
      type: object
      properties:
        text:
          maxLength: 7000
          minLength: 1
          type: string
    MessageOutDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        senderId:
          type: integer
          format: int64
        receiverId:
          type: integer
          format: int64
        text:
          type: string
        createdAt:
          type: string
          format: date-time
    JwtRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 255
          minLength: 3
          type: string
        password:
          maxLength: 50
          minLength: 3
          type: string
    PostUpdateDto:
      type: object
      properties:
        heading:
          maxLength: 150
          minLength: 3
          type: string
        text:
          maxLength: 7000
          minLength: 3
          type: string
        image:
          type: array
          items:
            type: string
            format: byte
    UserOutDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        username:
          type: string